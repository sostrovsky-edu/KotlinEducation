package interfaces.example6

/**
 * Реализуем свойство, хранящее значение и обладающее дополнительнои логикой, выполняющейся при чтении и изменении.
 *
 * Вы можете спросить: в чем разница между свойствами, имеющими и не имеющими поля для хранения значений?
 * Способ обращения к свойству не зависит от наличия у него отдельного поля. Компилятор сгенерирует такое поле для
 * свойства, если вы будете явно ссылаться на него или использовать реализацию методов доступа по умолчанию.
 * Если вы определите собственные методы доступа, не использующие идентификатора field (в методе чтения, если свойство
 * объявлено как val, или в обоих методах, если это изменяемое свойство), тогда отдельное поле не будет сгенерировано.
 */
fun main() {
    val user = User("Alice")
    user.address = "Pushkin street 45"
    user.address = "Lenin street 15"

    println(user.address)
}

class User(val name: String) {
    var address: String = "unspecified"
        get() = "Address for $name: Chisinau, $field"
        set(value: String) {
            println("""Address was changed for $name: 
                "$field" -> "$value".""".trimIndent()
            )
            field = value
        }
}